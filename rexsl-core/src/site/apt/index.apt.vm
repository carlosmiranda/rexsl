 ------
 ReXSL core module
 ------
 Yegor Bugayenko
 ------
 2011-08-21
 ------

~~
~~ Copyright (c) 2011-2013, ReXSL.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the ReXSL.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

ReXSL core module

  There are two classes that you should use in your project (both
  of them are always mandatory):
  {{{./apidocs-${project.version}/com/rexsl/core/RestfulServlet.html}<<<RestfulServlet>>>}} and
  {{{./apidocs-${project.version}/com/rexsl/core/XsltFilter.html}<<<XsltFilter>>>}}. Use them
  in <<<WEB-INF/web.xml>>>:

+--
<filter>
  <filter-name>XsltFilter</filter-name>
  <filter-class>com.rexsl.core.XsltFilter</filter-class>
</filter>
<filter-mapping>
  <filter-name>XsltFilter</filter-name>
  <servlet-name>RestfulServlet</servlet-name>
  <dispatcher>REQUEST</dispatcher>
  <dispatcher>ERROR</dispatcher>
</filter-mapping>
<servlet>
  <servlet-name>RestfulServlet</servlet-name>
  <servlet-class>com.rexsl.core.RestfulServlet</servlet-class>
  <init-param>
    <param-name>com.rexsl.PACKAGES</param-name>
    <param-value>com.example.foo</param-value>
  </init-param>
</servlet>
<servlet-mapping>
  <servlet-name>RestfulServlet</servlet-name>
  <url-pattern>/*</url-pattern>
</servlet-mapping>
+--

  {{{./apidocs-${project.version}/com/rexsl/core/RestfulServlet.html}<<<RestfulServlet>>>}} is
  responsible for handling of JAX-RS requests and converting your JAXB annotated
  classes into XML documents.

  {{{./apidocs-${project.version}/com/rexsl/core/XsltFilter.html}<<<XsltFilter>>>}} is converting
  XML output documents into XHTML when necessary.

  This dependency you add to <<<pom.xml>>> (or download
  {{{http://repo1.maven.org/maven2/com/rexsl/rexsl-core/${project.version}/rexsl-core-${project.version}.jar}rexsl-core-${project.version}.jar}}
  and add it to classpath):

+--
<dependency>
  <groupId>com.rexsl</groupId>
  <artifactId>rexsl-core</artifactId>
  <version>${project.version}</version>
</dependency>
+--

  Also take a look at {{{../rexsl-page}rexsl-page}}, which
  helps to build RESTful XML pages.

* Supplementary Classes

  {{{./apidocs-${project.version}/com/rexsl/core/Manifests.html}<<<Manifests>>>}} is
  a convenient accessor to <<<MANIFEST.MF>>> files of your web application.

  {{{./apidocs-${project.version}/com/rexsl/core/annotations/Stylesheet.html}<<<Stylesheet>>>}} annotation
  enables re-configuration of XSL stylesheet name for a JAXB-annotated object.

  {{{./apidocs-${project.version}/com/rexsl/core/annotations/Schema.html}<<<Schema>>>}} annotation
  lets you set the name of XML Schema of a JAXB-annotated object.

  {{{./apidocs-${project.version}/com/rexsl/core/ExceptionTrap.html}<<<ExceptionTrap>>>}} servlet
  helps you to catch all uncaught exceptions and manage them gracefully, showing
  some information to your end-users.

