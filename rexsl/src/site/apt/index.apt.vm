 ------
 ReXSL, Java Framework on top of JAX-RS, XSL, and JAXB
 ------
 Yegor Bugayenko
 ------
 2011-08-21
 ------

~~
~~ Copyright (c) 2011, ReXSL.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the ReXSL.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

ReXSL, Java Framework on top of JAX-RS, XSL, and JAXB

  The idea is simple - to make a
  {{{http://en.wikipedia.org/wiki/Representational_state_transfer}RESTful}
  XML API available in a browser-friendly
  format renderable with
  {{{http://en.wikipedia.org/wiki/XSL}XSL}} stylesheets.
  With ReXSL you develop your web
  application as a RESTful "web service" while XSL stylesheets transform it
  to an HTML web site.

  The diagram explains how components are connected to each other. It is a
  classic
  {{{http://en.wikipedia.org/wiki/Model–view–controller}MVC pattern}},
  where {{{http://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding}JAXB}}
  {{{http://en.wikipedia.org/wiki/Plain_Old_Java_Object}POJOs}} play a
  role of a Model.
  {{{http://en.wikipedia.org/wiki/Java_API_for_RESTful_Web_Services}JAX-RS}} resources are Controllers.
  Stylesheets with a powerful XSL 2.0 language are Views.

[texry/layers.png] UML diagram with layers

  This article will help you to start: {{{./start.html}Quick Start Guide}}.

