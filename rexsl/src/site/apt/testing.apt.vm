 ------
 Introduction to ReXSL Testing
 ------
 Yegor Bugayenko
 ------
 2012-03-25
 ------

~~
~~ Copyright (c) 2011-2012, ReXSL.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the ReXSL.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

Introduction to ReXSL Testing

  There are three types of tests you should use: unit tests, integration
  tests and catapult tests (that's how we call them). You know what
  unit tests are, right? If not, we recommend to read this book first:
  "Growing Object-Oriented Software, Guided by Tests",
  by Steve Freeman and Nat Pryce, Addison-Wesley Professional, October 2009
  ({{{http://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627}in amazon.com}}).
  We created three supplementary classes that help you to test
  your JAXB Model:
  {{{./rexsl-test/apidocs/com/rexsl/test/JaxbConverter.html}JaxbConverter}},
  {{{./rexsl-test/apidocs/com/rexsl/test/XhtmlConverter.html}XhtmlConverter}},
  {{{./rexsl-test/apidocs/com/rexsl/test/XhtmlMatchers.html}XhtmlMatchers}},
  (read their JavaDocs for more details).

  Interesting part is integration and catapult testing. To be continued...

  Most important integration testing "checks":

   * {{{./rexsl-maven-plugin/apidocs/com/rexsl/maven/checks/InContainerScriptsCheck.html}InContainerScriptsCheck}}:
   starts a container and executes your Groovy scripts;

   * {{{./rexsl-maven-plugin/apidocs/com/rexsl/maven/checks/XhtmlOutputCheck.html}XhtmlOutputCheck}}:
   applies XSL stylesheets to static XML files and validates resulting (X)HTML;

   * {{{./rexsl-maven-plugin/apidocs/com/rexsl/maven/checks/CssStaticCheck.html}CssStaticCheck}}:
   using {{{http://www.csslint.net/}CSSLint}} performs static analysis of CSS stylesheets;

   * {{{./rexsl-maven-plugin/apidocs/com/rexsl/maven/checks/JigsawCssCheck.html}JigsawCssCheck}}:
   validates CSS stylesheets against {{{http://www.w3.org/Jigsaw/}W3C Jigsaw}} validator;

   * {{{./rexsl-maven-plugin/apidocs/com/rexsl/maven/checks/JSStaticCheck.html}JSStaticCheck}}:
   runs JavaScripts static code analysis, using {{{http://www.jslint.com/}JSLint}};

   * {{{./rexsl-maven-plugin/apidocs/com/rexsl/maven/checks/WebXmlCheck.html}WebXmlCheck}}:
   validates <<<web.xml>>> against Servlet API schema;

  Some new checks will appear in the next versions of ReXSL Maven plugin.

