 ------
 Introduction to ReXSL
 ------
 Yegor Bugayenko
 ------
 2011-08-21
 ------

~~
~~ Copyright (c) 2011, ReXSL.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the ReXSL.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~
~~ @version $Id$
~~

ReXSL Maven Plugin

  This plugin is helping you to test your ReXSL-powered
  web application and perform some pre-packaging changes to your
  web assets (like CSS/XSL stylesheets, JavaScript code, etc.)

  Read more about its {{{./usage.html}usage}}.

  The workflow of the plugin is this:

   [[1]] Statically analyze the content of <<<src/main/webapp>>> and fail
     if any prohibited content found there, for example incorrectly formatted
     CSS stylesheet or <<<web.xml>>> file not compliant to its XSD schema.

   [[2]] Perform XSL transformations on all <<<xml>>> files found in
     <<<src/test/rexsl/xml>>> (using your XSL stylesheets attached to them)
     and validate that resulting HTML documents are compliant to the rules
     of W3C and your <<<groovy>>> files found in <<<src/test/rexsl/xhtml>>>.

   [[3]] Run all pre-start <<<groovy>>> scripts from
     <<<src/test/rexsl/bootstrap>>>
     from plugin class loader.

   [[4]] Start Java servlet container (Jetty) with your classes and resources,
     emulating its real deployment to a real container.

   [[5]] Run all startup data initializing <<<groovy>>> scripts from
     <<<src/test/rexsl/setup>>>, inside the container and in its class loader.

   [[6]] Run all <<<groovy>>> tests found in <<<src/test/rexsl/scripts>>>.

   [[7]] Shutdown the container and report success.

  Of course, at any step build may fail.

  There are a number of cookbook advices, which will help:

   * {{{./setup.html}How to add application data before tests?}}

   * {{{./bootstrap.html}How to pre-configure the application and mock resources?}}

   * {{{./stubs.html}How to add extra functionality during tests?}}

   * {{{./selenium.html}How to use Selenium in ReXSL testing?}}

