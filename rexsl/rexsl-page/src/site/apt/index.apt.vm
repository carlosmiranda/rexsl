 ------
 RESTful XML Page Modeling with ReXSL-Page
 ------
 Yegor Bugayenko
 ------
 2012-04-08
 ------

~~
~~ Copyright (c) 2011-2012, ReXSL.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the ReXSL.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

RESTful XML Page Modeling with ReXSL-Page

  With this module you can build REST XML response much faster
  (provided you defined <<<MyPage>>> class yourself already):

+--
@Path("/")
public class MainRs {
  @GET
  @Produces(MediaTypes.APPLICATION_XML)
  public MyPage front() {
    return new PageBuilder()
      .stylesheet("/xsl/front.xsl")
      .build(MyPage.class)
      .add(new JaxbBundle("score", 123));
  }
}
+--

  The response will look like:

+--
<?xml version="1.0" ?>
<?xml-stylesheet type='text/xsl' href='/xsl/front.xsl'?>
<page>
  <score>123</score>
</page>
+--

  Isn't it neat? :)
  Start reading from
  {{{./apidocs-${releasedVersion}/com/rexsl/page/PageBuilder.html}<<<com.rexsl.page.PageBuilder>>>}}.

  Include this dependency into your project (or download
  {{{http://repo1.maven.org/maven2/com/rexsl/rexsl-page/${releasedVersion}/rexsl-page-${releasedVersion}.jar}rexsl-page-${releasedVersion}.jar}}
  and add to classpath):

+--
<dependency>
  <groupId>com.rexsl</groupId>
  <artifactId>rexsl-page</artifactId>
  <version>${releasedVersion}</version>
</dependency>
+--

  This module also contains a few mockers.
  To use it you should include this dependencies into your project
  (or download
  {{{http://repo1.maven.org/maven2/com/rexsl/rexsl-page/${releasedVersion}/rexsl-page-${releasedVersion}-mock.jar}rexsl-page-${releasedVersion}-mock.jar}}
  and add to classpath):

+--
<dependency>
  <groupId>com.rexsl</groupId>
  <artifactId>rexsl-page</artifactId>
  <version>${releasedVersion}</version>
  <classifier>mock</classifier>
  <scope>test</scope>
</dependency>
<dependency>
  <groupId>javax.servlet</groupId>
  <artifactId>servlet-api</artifactId>
  <version>2.4</version>
  <scope>provided</scope>
</dependency>
+--
